# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-03-25 11:14
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import sapl.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('materia', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssuntoNorma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', models.CharField(max_length=50, verbose_name='Assunto')),
                ('descricao', models.CharField(blank=True, max_length=250, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Assunto de Norma',
                'verbose_name_plural': 'Assuntos de Norma',
            },
        ),
        migrations.CreateModel(
            name='LegislacaoCitada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disposicoes', models.CharField(blank=True, max_length=15, verbose_name='Disposição')),
                ('parte', models.CharField(blank=True, max_length=8, verbose_name='Parte')),
                ('livro', models.CharField(blank=True, max_length=7, verbose_name='Livro')),
                ('titulo', models.CharField(blank=True, max_length=7, verbose_name='Título')),
                ('capitulo', models.CharField(blank=True, max_length=7, verbose_name='Capítulo')),
                ('secao', models.CharField(blank=True, max_length=7, verbose_name='Seção')),
                ('subsecao', models.CharField(blank=True, max_length=7, verbose_name='Subseção')),
                ('artigo', models.CharField(blank=True, max_length=4, verbose_name='Artigo')),
                ('paragrafo', models.CharField(blank=True, max_length=3, verbose_name='Parágrafo')),
                ('inciso', models.CharField(blank=True, max_length=10, verbose_name='Inciso')),
                ('alinea', models.CharField(blank=True, max_length=3, verbose_name='Alínea')),
                ('item', models.CharField(blank=True, max_length=3, verbose_name='Item')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='materia.MateriaLegislativa')),
            ],
            options={
                'verbose_name': 'Legislação',
                'verbose_name_plural': 'Legislações',
            },
        ),
        migrations.CreateModel(
            name='NormaJuridica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_integral', models.FileField(blank=True, null=True, upload_to=sapl.utils.texto_upload_path, verbose_name='Texto Integral')),
                ('numero', models.CharField(max_length=8, verbose_name='Número')),
                ('ano', models.PositiveSmallIntegerField(choices=[(2017, 2017), (2016, 2016), (2015, 2015), (2014, 2014), (2013, 2013), (2012, 2012), (2011, 2011), (2010, 2010), (2009, 2009), (2008, 2008), (2007, 2007), (2006, 2006), (2005, 2005), (2004, 2004), (2003, 2003), (2002, 2002), (2001, 2001), (2000, 2000), (1999, 1999), (1998, 1998), (1997, 1997), (1996, 1996), (1995, 1995), (1994, 1994), (1993, 1993), (1992, 1992), (1991, 1991), (1990, 1990), (1989, 1989), (1988, 1988), (1987, 1987), (1986, 1986), (1985, 1985), (1984, 1984), (1983, 1983), (1982, 1982), (1981, 1981), (1980, 1980), (1979, 1979), (1978, 1978), (1977, 1977), (1976, 1976), (1975, 1975), (1974, 1974), (1973, 1973), (1972, 1972), (1971, 1971), (1970, 1970), (1969, 1969), (1968, 1968), (1967, 1967), (1966, 1966), (1965, 1965), (1964, 1964), (1963, 1963), (1962, 1962), (1961, 1961), (1960, 1960), (1959, 1959), (1958, 1958), (1957, 1957), (1956, 1956), (1955, 1955), (1954, 1954), (1953, 1953), (1952, 1952), (1951, 1951), (1950, 1950), (1949, 1949), (1948, 1948), (1947, 1947), (1946, 1946), (1945, 1945), (1944, 1944), (1943, 1943), (1942, 1942), (1941, 1941), (1940, 1940), (1939, 1939), (1938, 1938), (1937, 1937), (1936, 1936), (1935, 1935), (1934, 1934), (1933, 1933), (1932, 1932), (1931, 1931), (1930, 1930), (1929, 1929), (1928, 1928), (1927, 1927), (1926, 1926), (1925, 1925), (1924, 1924), (1923, 1923), (1922, 1922), (1921, 1921), (1920, 1920), (1919, 1919), (1918, 1918), (1917, 1917), (1916, 1916), (1915, 1915), (1914, 1914), (1913, 1913), (1912, 1912), (1911, 1911), (1910, 1910), (1909, 1909), (1908, 1908), (1907, 1907), (1906, 1906), (1905, 1905), (1904, 1904), (1903, 1903), (1902, 1902), (1901, 1901), (1900, 1900), (1899, 1899), (1898, 1898), (1897, 1897), (1896, 1896), (1895, 1895), (1894, 1894), (1893, 1893), (1892, 1892), (1891, 1891), (1890, 1890)], verbose_name='Ano')),
                ('esfera_federacao', models.CharField(choices=[('E', 'Estadual'), ('F', 'Federal'), ('M', 'Municipal')], max_length=1, verbose_name='Esfera Federação')),
                ('data', models.DateField(verbose_name='Data')),
                ('data_publicacao', models.DateField(blank=True, null=True, verbose_name='Data Publicação')),
                ('veiculo_publicacao', models.CharField(blank=True, max_length=30, verbose_name='Veículo Publicação')),
                ('pagina_inicio_publicacao', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pg. Início')),
                ('pagina_fim_publicacao', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pg. Fim')),
                ('ementa', models.TextField(verbose_name='Ementa')),
                ('indexacao', models.TextField(blank=True, verbose_name='Indexação')),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('complemento', models.NullBooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Complementar ?')),
                ('data_vigencia', models.DateField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('assuntos', models.ManyToManyField(blank=True, to='norma.AssuntoNorma', verbose_name='Assuntos')),
                ('materia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='materia.MateriaLegislativa', verbose_name='Matéria')),
            ],
            options={
                'ordering': ['-data', '-numero'],
                'verbose_name': 'Norma Jurídica',
                'verbose_name_plural': 'Normas Jurídicas',
            },
        ),
        migrations.CreateModel(
            name='NormaRelacionada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('norma_principal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='norma_principal', to='norma.NormaJuridica', verbose_name='Norma Principal')),
                ('norma_relacionada', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='norma_relacionada', to='norma.NormaJuridica', verbose_name='Norma Relacionada')),
            ],
            options={
                'verbose_name': 'Norma Relacionada',
                'verbose_name_plural': 'Normas Relacionadas',
            },
        ),
        migrations.CreateModel(
            name='TipoNormaJuridica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equivalente_lexml', models.CharField(blank=True, choices=[('constituicao', 'constituicao'), ('ementa.constitucional', 'ementa.constitucional'), ('lei.complementar', 'lei.complementar'), ('lei.delegada', 'lei.delegada'), ('lei', 'lei'), ('decreto.lei', 'decreto.lei'), ('medida.provisoria', 'medida.provisoria'), ('decreto', 'decreto'), ('lei.organica', 'lei.organica'), ('emenda.lei.organica', 'emenda.lei.organica'), ('decreto.legislativo', 'decreto.legislativo'), ('resolucao', 'resolucao'), ('regimento.interno', 'regimento.interno')], max_length=50, verbose_name='Equivalente LexML')),
                ('sigla', models.CharField(max_length=3, verbose_name='Sigla')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={
                'ordering': ['descricao'],
                'verbose_name': 'Tipo de Norma Jurídica',
                'verbose_name_plural': 'Tipos de Norma Jurídica',
            },
        ),
        migrations.CreateModel(
            name='TipoVinculoNormaJuridica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(blank=True, max_length=1, verbose_name='Sigla')),
                ('descricao_ativa', models.CharField(blank=True, max_length=50, verbose_name='Descrição Ativa')),
                ('descricao_passiva', models.CharField(blank=True, max_length=50, verbose_name='Descrição Passiva')),
            ],
            options={
                'verbose_name': 'Tipo de Vínculo entre Normas Jurídicas',
                'verbose_name_plural': 'Tipos de Vínculos entre Normas Jurídicas',
            },
        ),
        migrations.AddField(
            model_name='normarelacionada',
            name='tipo_vinculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='norma.TipoVinculoNormaJuridica', verbose_name='Tipo de Vínculo'),
        ),
        migrations.AddField(
            model_name='normajuridica',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='norma.TipoNormaJuridica', verbose_name='Tipo da Norma Juridica'),
        ),
        migrations.AddField(
            model_name='legislacaocitada',
            name='norma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='norma.NormaJuridica'),
        ),
    ]
